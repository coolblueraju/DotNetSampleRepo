# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build, Scan and deploy ASP.Net Core app to Azure Web App - dotnet-multi-project

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish ./WebApi/WebApi.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  codeql-analysis:
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    #- name: Setup CodeQL
    #  uses: github/codeql-action/setup@v3

    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  sonarqube-analysis:
    name: SonarCloud
    #runs-on: windows-latest
    #steps:
    #  - uses: actions/checkout@v2
    #    with:
    #      # Shallow clones should be disabled for a better relevancy of analysis
    #      fetch-depth: 0

    #  - name: Set up .NET Core
    #    uses: actions/setup-dotnet@v1
        #with:
        #  dotnet-version: '6.0.x'
        #  include-prerelease: true

      # Speed-up analysis by caching the scanner workspace
    #  - name: Cache SonarCloud workspace
    #    uses: actions/cache@v1
    #    with:
    #      path: ~\.sonar\cache
    #      key: ${{ runner.os }}-sonar-cache
    #      restore-keys: ${{ runner.os }}-sonar-cache

      # Speed-up analysis by caching the scanner installation
    #  - name: Cache SonarCloud scanner
    #    id: cache-sonar-scanner
    #    uses: actions/cache@v1
    #    with:
    #      path: .\.sonar\scanner
    #      key: ${{ runner.os }}-sonar-scanner
    #      restore-keys: ${{ runner.os }}-sonar-scanner

    #  - name: Install SonarCloud scanner
    #    if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
    #    shell: powershell
        # The --version argument is optional. If it is omitted the latest version will be installed.
    #    run: |
    #      New-Item -Path .\.sonar\scanner -ItemType Directory
    #      dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner --version 4.8.0

    #  - name: Build
    #    shell: powershell
    #    env:
          # Needed to get some information about the pull request, if any
    #      GITHUB_TOKEN: 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 #${{ secrets.GITHUB_TOKEN }}
          # The secret referenced in the command-line by SONAR_TOKEN should be generated
          # from https://sonarcloud.io/account/security/
          # The organization and project arguments (see /o and /k) are displayed
          # on the project dashboard in SonarCloud.
    #    run: |
    #      .\.sonar\scanner\dotnet-sonarscanner begin /k:"SonarSource_sonarcloud-github-action-samples" /o:"sonarsource" /d:sonar.login="266b076518359cd0f49dec9b3e52c68765f76f8" /d:sonar.host.url="https://sonarcloud.io"
    #      dotnet build DotNetGitHubActions.sln
    #      .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="266b076518359cd0f49dec9b3e52c68765f76f8"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - name: Analyze with SonarQube
      uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
      env:
        GITHUB_TOKEN: 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  # Needed to get PR information
        SONAR_TOKEN: 266b076518359cd0f49dec9b3e52c68765f76f8   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        SONAR_HOST_URL: https://sonarcloud.io/   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
      with:
          # Additional arguments for the sonarcloud scanner
        args:
          -Dsonar.organization=coolblueraju
          -Dsonar.projectKey=DotNetSampleRepo
          -Dsonar.python.coverage.reportPaths=coverage.xml
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false

    #- name: SonarCloud Scan
    #  uses: sonarsource/sonarcloud-github-action@master
    #  env:
    #    GITHUB_TOKEN: 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
    #    SONAR_TOKEN: 266b076518359cd0f49dec9b3e52c68765f76f8

    #- name: Scan with SonarCloud
    #  uses: sonarsource/sonarcloud-github-action@master
    #  env:
    #    GITHUB_TOKEN: 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
    #    SONAR_TOKEN: 266b076518359cd0f49dec9b3e52c68765f76f8
    #  with:
    #    projectBaseDir: .
    #    args: >
    #      -Dsonar.organization=coolblueraju
    #      -Dsonar.projectKey=DotNetSampleRepo
    #      -Dsonar.python.coverage.reportPaths=coverage.xml

    #- name: Setup SonarCloud
    #  uses: sonarsource/sonarcloud-github-action@v1
    #  with:
    #    organization: coolblueraju
    #    token: 266b076518359cd0f49dec9b3e52c68765f76f8
    #    projectKey: DotNetSampleRepo

    #- name: Setup SonarQube
    #  uses: sonarsource/setup-sonarqube@v1
    #  with:
    #    token: 4266b076518359cd0f49dec9b3e52c68765f76f8
    #    projectKey: DotNetSampleRepo
    #    organization: coolblueraju
    #    scannerVersion: '4.6.2.2472'

    #- name: Run SonarQube Analysis
    #  run: sonar-scanner

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      #- name: Deploy to Azure Web App
      #  id: deploy-to-webapp
      #  uses: azure/webapps-deploy@v2
      #  with:
      #    app-name: 'dotnet-multi-project'
      #    slot-name: 'Production'
      #    publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AD8E4421F764498C8F00358AADD7B8C4 }}
      #    package: .
